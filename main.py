import networkx as nx
import random



def MovingFromNodeToNodeRandomly(starting_node,ending_node,myNetwork):
    current_node = starting_node
    path_taken = [starting_node]
    while True:
        if ending_node in myNetwork.neighbors(current_node):
            next_node = ending_node
            path_taken.append(next_node)
            return path_taken
        else:
            linked_nodes = list(myNetwork.neighbors(current_node))
            next_node = random.choice(linked_nodes)
            path_taken.append(next_node)
            current_node = next_node

def main():
    nodes = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42]
    edges = edges = [
        (1, 4), (1, 5), (1, 6), (1, 7), (1, 8), (1, 9), (1, 10), (1, 11), (1, 12), (1, 13), (1, 14), (1, 15),
        (2, 4), (2, 5), (2, 6), (2, 7), (2, 8), (2, 9), (2, 10), (2, 11), (2, 12), (2, 13), (2, 14), (2, 15),
        (3, 4), (3, 5), (3, 6), (3, 7), (3, 8), (3, 9), (3, 10), (3, 11), (3, 12), (3, 13), (3, 14), (3, 15),
        (4, 16), (4, 17), (4, 18), (4, 19), (4, 20), (4, 21), (5, 16), (5, 17), (5, 18), (5, 19), (5, 20), (5, 21),
        (6, 16), (6, 17), (6, 18), (6, 19), (6, 20), (6, 21), (7, 16), (7, 17), (7, 18), (7, 19), (7, 20), (7, 21),
        (8, 16), (8, 17), (8, 18), (8, 19), (8, 20), (8, 21), (9, 16), (9, 17), (9, 18), (9, 19), (9, 20), (9, 21),
        (10, 16), (10, 17), (10, 18), (10, 19), (10, 20), (10, 21), (11, 16), (11, 17), (11, 18), (11, 19), (11, 20), (11, 21),
        (12, 16), (12, 17), (12, 18), (12, 19), (12, 20), (12, 21), (13, 16), (13, 17), (13, 18), (13, 19), (13, 20), (13, 21),
        (14, 16), (14, 17), (14, 18), (14, 19), (14, 20), (14, 21), (15, 16), (15, 17), (15, 18), (15, 19), (15, 20), (15, 21),
        (16, 22), (16, 23), (16, 24), (16, 25), (16, 26), (16, 27), (17, 22), (17, 23), (17, 24), (17, 25), (17, 26), (17, 27),
        (18, 22), (18, 23), (18, 24), (18, 25), (18, 26), (18, 27), (19, 22), (19, 23), (19, 24), (19, 25), (19, 26), (19, 27),
        (20, 22), (20, 23), (20, 24), (20, 25), (20, 26), (20, 27), (21, 22), (21, 23), (21, 24), (21, 25), (21, 26), (21, 27),
        (22, 28), (22, 29), (22, 30), (22, 31), (22, 32), (22, 33), (22, 34), (22, 35), (22, 36), (22, 37), (22, 38), (22, 39),
        (23, 28), (23, 29), (23, 30), (23, 31), (23, 32), (23, 33), (23, 34), (23, 35), (23, 36), (23, 37), (23, 38), (23, 39),
        (24, 28), (24, 29), (24, 30), (24, 31), (24, 32), (24, 33), (24, 34), (24, 35), (24, 36), (24, 37), (24, 38), (24, 39),
        (25, 28), (25, 29), (25, 30), (25, 31), (25, 32), (25, 33), (25, 34), (25, 35), (25, 36), (25, 37), (25, 38), (25, 39),
        (26, 28), (26, 29), (26, 30), (26, 31), (26, 32), (26, 33), (26, 34), (26, 35), (26, 36), (26, 37), (26, 38), (26, 39),
        (27, 28), (27, 29), (27, 30), (27, 31), (27, 32), (27, 33), (27, 34), (27, 35), (27, 36), (27, 37), (27, 38), (27, 39),
        (28, 40), (28, 41), (28, 42), (29, 40), (29, 41), (29, 42), (30, 40), (30, 41), (30, 42), (31, 40), (31, 41), (31, 42),
        (32, 40), (32, 41), (32, 42), (33, 40), (33, 41), (33, 42), (34, 40), (34, 41), (34, 42), (35, 40), (35, 41), (35, 42),
        (36, 40), (36, 41), (36, 42), (37, 40), (37, 41), (37, 42), (38, 40), (38, 41), (38, 42), (39, 40), (39, 41), (39, 42)
        ]


    myNetwork = nx.DiGraph()
    myNetwork.add_nodes_from(nodes)
    myNetwork.add_edges_from(edges)

    starting_node = int(input("Please enter starting node: "))
    ending_node = int(input("Please enter ending node: "))
    path_taken = MovingFromNodeToNodeRandomly(starting_node,ending_node,myNetwork)
    node_guess = input("Provide a guess for an edge in the path taken:  ")
    if node_guess in path_taken:
        print("Your guess is correct")
    else: print("Your guess is incorrect")


main()